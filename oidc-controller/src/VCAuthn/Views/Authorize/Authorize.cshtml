@model  VCAuthn.IdentityServer.Endpoints.AuthorizationViewModel
@{
    Layout = "_Layout";
    var txtUri = $"{Model.Challenge}"; 
    var qrUri = $"https://chart.googleapis.com/chart?cht=qr&chs=300x300&chld=L|0&chl={Uri.EscapeDataString(Model.Challenge)}";
}
  <div>
    <!-- These fields are used by the script at the bottom of the page -->
    <input id="pollInterval" value="@Model.Interval" style="display: none" />
    <input id="pollUrl" value="@Model.PollUrl" style="display: none" />
    <input id="resolutionUrl" value="@Model.ResolutionUrl" style="display: none" />
  </div>


  <div class="container">

    <div class="introduction">
      <h2>
        Please scan the QR code to initiate the <strong>Verifiable Credential</strong> exchange
      </h2>
    </div>

    <div class="qr-code-display">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="704.094" height="441" viewBox="0 0 704.094 441">
        <image id="frame" width="288" height="288" transform="translate(209.5 76)" xlink:href="@qrUri"/>
      </svg>
      <a href="@txtUri">@txtUri</a>
    </div>

    <div class="presentation-restrictions">
      <p>
        The credential must meet the following requirements:
      </p>

      <div class="requested-claims">
        @{
          foreach (var item in Model.PresentationRequest.RequestedAttributes)
          {
            <div class="claim-group">
              <span class="claim-name">Claim Name:</span> <span class="claim-value">@item.Value.Name</span>
              <br/>
              <span class="claim-restrictions-title">Claim restrictions:</span>
              <ul class="claim-restriction-list">
                @{
                  foreach (var restriction in item.Value.Restrictions) {
                    if (!String.IsNullOrEmpty(@restriction.IssuerDid)) {
                      @:<li class="restriction-item">Issuer DID: <span class="claim-value">@restriction.IssuerDid</span></li>
                    }
                    if (!String.IsNullOrEmpty(@restriction.SchemaId)) {
                      @:<li class="restriction-item">Schema Id: <span class="claim-value">@restriction.SchemaId</span></li>
                    }
                    if (!String.IsNullOrEmpty(@restriction.SchemaIssuerDid)) {
                      @:<li class="restriction-item">Schema Issuer DID: <span class="claim-value">@restriction.SchemaIssuerDid</span></li>
                    }
                    if (!String.IsNullOrEmpty(@restriction.SchemaName)) {
                      @:<li class="restriction-item">Schema Name: <span class="claim-value">@restriction.SchemaName</span></li>
                    }
                    if (!String.IsNullOrEmpty(@restriction.SchemaVersion)) {
                      @:<li class="restriction-item">Schema Version: <span class="claim-value">@restriction.SchemaVersion</span></li>
                    }
                    if (!String.IsNullOrEmpty(@restriction.CredentialDefinitionId)) {
                      @:<li class="restriction-item">Credential Definition Id: <span class="claim-value">@restriction.CredentialDefinitionId</span></li>
                    }
                  }
                }
              </ul>
            </div>
          }
        }
      </div>
    </div>

  </div>

<style>
  * {
    box-sizing: border-box;
  }
  
  body {
    background: #fff;
    padding: 0;
    margin: 0;
    border:0;
    height: 100vh;
  }

  .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 12px;
  }

  .back {
    background: none;
    border: none;
    position: absolute;
    top: 0;
    left:0;
    width: 64px;
    height: 64px;
  }

  .introduction {
    text-align: center;
  }

  .claim-value {
    font-style: italic;
    font-weight: lighter;
  }

  .claim-restriction-list {
    list-style: upper-roman;
  }

  .claim-group:nth-child(n+2) {
    border-top: 1px black dotted;
  }

  .requested-claims {
    background-color: ghostwhite;
    padding: 5px;
  }
</style>

<script type="text/javascript">
    $(document).ready((function poll() {
        setTimeout(function () {
            $.ajax({
                type: 'GET',
                url: document.getElementById('pollUrl').value,
                success: function () {
                    window.location.replace(document.getElementById('resolutionUrl').value);
                },
                error: poll
            });
        }, parseInt(document.getElementById('pollInterval').value, 10));
    })());
</script>